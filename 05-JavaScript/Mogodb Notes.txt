mongo
mongod
help



// Database Commands
show dbs // View all databases
use dbName // Create a new or switch databases 
db // View current Database
db.dropDatabase() // Delete Database 

//  Collection Commands 
show collections // Show Collections
db.createCollection('comments') // Create a collection named 'comments'
db.comments.drop() // Drop a collection named 'comments'

//  Row(Document) Commands // 
db.comments.find() // Show all Rows in a Collection 
db.comments.find().pretty() // Show all Rows in a Collection (Prettified)
db.comments.findOne({name: 'Harry'}) // Find the first row matching the object
db.products.find({_id: {$gt: 1}}, {name: 1})

db.comments.insert({ // Insert One Row
    'name': 'Harry',
    'lang': 'JavaScript',
    'member_since': 5
})

db.comments.insertMany([{ // Insert many Rows
    'name': 'Harry',
    'lang': 'JavaScript',
    'member_since': 5
    }, 
    {'name': 'Rohan',
    'lang': 'Python',
    'member_since': 3
    },
    {'name': 'Lovish',
    'lang': 'Java',
    'member_since': 4
}])

db.comments.find({lang:'Python'}) // Search in a MongoDb Database
db.comments.find().limit(2) // Limit the number of rows in output
db.comments.find().count() // Count the number of rows in the output

db.comments.update({name: 'Shubham'}, // Update a row
{'name': 'Harry',
    'lang': 'JavaScript',
    'member_since': 51
}, {upsert: true})

db.comments.update({name: 'Rohan'}, // Mongodb Increment Operator
{$inc:{
    member_since: 2
}})

db.comments.update({name: 'Rohan'}, // Mongodb Rename Operator
{$rename:{
    member_since: 'member'
}})


// mongoDb operator
db.comments.find({member_since: {$lt: 90}}) // Less than/Greater than/ Less than or Eq/Greater than or Eq 
db.comments.find({member_since: {$lte: 90}}) // 
db.comments.find({member_since: {$gt: 90}}) // 
db.comments.find({member_since: {$gte: 90}}) // 


db.products.insertOne({ _id: 1, name: "Pen", price: 1.20});
db.products.updateOne({_id:1}, {$set: {stock: 32}});
db.products.remove({name: 'Harry'}) // Delete Row 
db.products.deleteOne({_id: 1})






